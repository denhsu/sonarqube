sonarqube {
  properties {
    property 'sonar.projectName', "${sonarProjectName} :: Server"
  }
}

sourceSets {
  test {
    resources {
      srcDirs += ['src/test/projects']
    }
  }
}

dependencies {
  compile 'org.slf4j:slf4j-api'
  compile 'org.slf4j:jul-to-slf4j'
  compile 'org.apache.logging.log4j:log4j-api'
  compile 'ch.qos.logback:logback-access'
  compile 'ch.qos.logback:logback-classic'
  compile 'ch.qos.logback:logback-core'

  compile 'org.apache.tomcat.embed:tomcat-embed-core'
  compile 'com.google.code.gson:gson'
  // not a transitive dep. At runtime lib/jdbc/h2 is used
  compileOnly 'com.h2database:h2'
  compile project(':sonar-core')
  compile project(':server:sonar-db-dao')
  compile project(':server:sonar-db-migration')
  compile project(':sonar-scanner-protocol')
  compile(project(':sonar-markdown')) {
    // already shaded with sonar-plugin-api
    exclude group: 'org.codehaus.sonar', module: 'sonar-channel'
  }
  compile project(':server:sonar-process')
  compile project(path: ':sonar-plugin-api', configuration: 'shadow')
  compile project(':sonar-ws')
  compile project(':server:sonar-plugin-bridge')
  compile 'org.sonarsource.update-center:sonar-update-center-common'
  compile 'commons-dbutils:commons-dbutils'
  compile 'org.apache.commons:commons-email'
  compile 'com.googlecode.java-diff-utils:diffutils'
  compile 'org.picocontainer:picocontainer'
  compile 'commons-dbcp:commons-dbcp'
  compile 'org.apache.httpcomponents:httpclient'
  compile 'org.elasticsearch.client:transport'
  compile 'com.hazelcast:hazelcast-client'
  compile 'com.google.protobuf:protobuf-java'
  compile 'javax.xml.bind:jaxb-api'
  compile 'io.jsonwebtoken:jjwt'
  compileOnly 'com.google.code.findbugs:jsr305'

  testCompile 'junit:junit'
  testCompile 'org.assertj:assertj-core'
  testCompile 'org.assertj:assertj-guava'
  testCompile 'org.mockito:mockito-core'
  testCompile 'org.hamcrest:hamcrest-all'
  testCompile project(':server:sonar-db-testing')
  testCompile 'com.github.tlrx:elasticsearch-test'
  testCompile 'com.tngtech.java:junit-dataprovider'
  testCompile 'com.github.kevinsawicki:http-request'
  testCompile 'org.reflections:reflections'
  testCompile 'org.subethamail:subethasmtp'
  testCompile 'com.squareup.okhttp3:mockwebserver'
  testCompile("org.elasticsearch.test:framework:${elasticsearchVersion}") {
    // should be excluded to avoid ES go into "test mode" and require to run EsTester-based UTs with RandomizedRunner
    exclude group: 'com.carrotsearch.randomizedtesting', module: 'randomizedtesting-runner'
    exclude group: 'org.elasticsearch', module: 'securemock'
  }
  testCompile 'com.google.code.findbugs:jsr305'
  testCompile 'com.h2database:h2'
  testCompile 'org.apache.logging.log4j:log4j-api'
  testCompile  'org.apache.logging.log4j:log4j-core'
}

task testJar(type: Jar) {
  classifier = 'tests'
  from sourceSets.test.output
}

artifactoryPublish.skip = false

// Used by core plugins
apply plugin: 'maven-publish'
publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
      artifact testJar
      artifact sourcesJar
      artifact javadocJar
    }
  }
}
